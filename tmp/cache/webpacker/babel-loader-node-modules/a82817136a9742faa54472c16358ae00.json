{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A map of values to control change names\n * @hidden\n */\n\nexports.controlChangeNames = {\n  1: \"modulationWheel\",\n  2: \"breath\",\n  4: \"footController\",\n  5: \"portamentoTime\",\n  7: \"volume\",\n  8: \"balance\",\n  10: \"pan\",\n  64: \"sustain\",\n  65: \"portamentoTime\",\n  66: \"sostenuto\",\n  67: \"softPedal\",\n  68: \"legatoFootswitch\",\n  84: \"portamentoControl\"\n};\n/**\n * swap the keys and values\n * @hidden\n */\n\nexports.controlChangeIds = Object.keys(exports.controlChangeNames).reduce(function (obj, key) {\n  obj[exports.controlChangeNames[key]] = key;\n  return obj;\n}, {});\nvar privateHeaderMap = new WeakMap();\nvar privateCCNumberMap = new WeakMap();\n/**\n * Represents a control change event\n */\n\nvar ControlChange =\n/** @class */\nfunction () {\n  /**\n   * @param event\n   * @param header\n   */\n  function ControlChange(event, header) {\n    privateHeaderMap.set(this, header);\n    privateCCNumberMap.set(this, event.controllerType);\n    this.ticks = event.absoluteTime;\n    this.value = event.value;\n  }\n\n  Object.defineProperty(ControlChange.prototype, \"number\", {\n    /**\n     * The controller number\n     */\n    get: function get() {\n      return privateCCNumberMap.get(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ControlChange.prototype, \"name\", {\n    /**\n     * return the common name of the control number if it exists\n     */\n    get: function get() {\n      if (exports.controlChangeNames[this.number]) {\n        return exports.controlChangeNames[this.number];\n      } else {\n        return null;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ControlChange.prototype, \"time\", {\n    /**\n     * The time of the event in seconds\n     */\n    get: function get() {\n      var header = privateHeaderMap.get(this);\n      return header.ticksToSeconds(this.ticks);\n    },\n    set: function set(t) {\n      var header = privateHeaderMap.get(this);\n      this.ticks = header.secondsToTicks(t);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ControlChange.prototype.toJSON = function () {\n    return {\n      number: this.number,\n      ticks: this.ticks,\n      time: this.time,\n      value: this.value\n    };\n  };\n\n  return ControlChange;\n}();\n\nexports.ControlChange = ControlChange;","map":null,"metadata":{},"sourceType":"module"}