{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from \"stimulus\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _default;\n}(Controller);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/zack/andrWert43h/app/javascript/controllers/patterns/video_text_controller.js"],"names":["Controller"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;EAE6BA,U","sourcesContent":["import { Controller } from \"stimulus\";\n\nexport default class extends Controller {\n  // TODO: implement text editing\n  // static targets = [\n  //   'noteText'\n  // ];\n\n  // connect() {\n  //   this.pos1 = 0;\n  //   this.pos2 = 0; \n  //   this.pos3 = 0;\n  //   this.pos4 = 0;\n  //   this.midiDeviceController = this.application.getControllerForElementAndIdentifier(this.element, \"patterns--midi-device\");\n  // }\n\n  // onMouseDown(e) {\n  //   e = e || window.event;\n  //   e.preventDefault();\n  //   // get the mouse cursor position at startup:\n  //    this.pos3 = e.clientX;\n  //    this.pos4 = e.clientY;\n  //   document.onmouseup = this.closeDragElement.bind(this);\n  //   // call a function whenever the cursor moves:\n  //   document.onmousemove = this.elementDrag.bind(this);\n  // }\n\n  // elementDrag(e) {\n  //    e = e || window.event;\n  //   e.preventDefault();\n  //   // calculate the new cursor position:\n  //    this.pos1 = this.pos3 - e.clientX;\n  //    this.pos2 = this.pos4 - e.clientY;\n  //    this.pos3 = e.clientX;\n  //    this.pos4 = e.clientY;\n  //   // set the element's new position:\n  //   this.noteTextTarget.style.top = (this.noteTextTarget.offsetTop - this.pos2) + \"px\";\n  //   this.noteTextTarget.style.left = (this.noteTextTarget.offsetLeft - this.pos1) + \"px\";\n  // }\n\n  // closeDragElement() {\n  //   // stop moving when mouse button is released:\n  //   document.onmouseup = null;\n  //   document.onmousemove = null;\n  // }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}