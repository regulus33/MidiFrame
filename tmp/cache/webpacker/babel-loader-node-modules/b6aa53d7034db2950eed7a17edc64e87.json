{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from \"stimulus\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      this._visibeNoteNumbersArray = [];\n      this.refreshKeyboard();\n    } ///////////////////////////////////////////\n    ///               PUBLIC                ///\n    ///////////////////////////////////////////\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      console.log('next');\n\n      if (this.position + 1 <= this.finalIndex) {\n        this.position++;\n      }\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      if (this.position != 0) {\n        this.position--;\n      }\n    }\n  }, {\n    key: \"_get_note_number\",\n    value: function _get_note_number(keyElement) {\n      return parseInt(keyElement.getAttribute('midi-note-number'));\n    }\n  }, {\n    key: \"refreshKeyboard\",\n    value: function refreshKeyboard() {\n      var _this = this;\n\n      this.keyBoardKeyTargets.forEach(function (key) {\n        return _this._show_key_if_visible_and_add_to_visibles(key, _this._get_note_number(key));\n      });\n      this.visiblesNoteNumbersArray = JSON.stringify(this._visibeNoteNumbersArray);\n    }\n  }, {\n    key: \"_show_key_if_visible_and_add_to_visibles\",\n    value: function _show_key_if_visible_and_add_to_visibles(keyElement, noteNumber) {\n      var is_in_current_array = this._visible_on_keyboard.includes(noteNumber);\n\n      var visibles = [];\n      keyElement.classList.toggle(\"hide\", !is_in_current_array);\n      if (is_in_current_array) this._visibeNoteNumbersArray.push(noteNumber);\n    }\n  }, {\n    key: \"visiblesNoteNumbersArray\",\n    get: function get() {\n      return JSON.parse(this.element.getAttribute(\"data-visible-note-numbers-array\"));\n    },\n    set: function set(notes) {\n      this.element.setAttribute(\"data-visible-note-numbers-array\", notes);\n    }\n  }, {\n    key: \"_visible_on_keyboard\",\n    get: function get() {\n      return this._notes[this.position].map(function (arr) {\n        return parseInt(arr[0]);\n      });\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return parseInt(this.data.get(\"position\"));\n    },\n    set: function set(value) {\n      this.data.set(\"position\", value);\n      this.refreshKeyboard();\n    }\n  }, {\n    key: \"_notes\",\n    get: function get() {\n      return JSON.parse(this.data.get(\"notes\"));\n    }\n  }, {\n    key: \"finalIndex\",\n    get: function get() {\n      return parseInt(this.data.get(\"final-index\"));\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = [\"keyBoardKey\"];\nexport { _default as default };","map":{"version":3,"sources":["/Users/zack/andrWert43h/app/javascript/controllers/patterns/keyboard_controller.js"],"names":["Controller","_visibeNoteNumbersArray","refreshKeyboard","console","log","position","finalIndex","keyElement","parseInt","getAttribute","keyBoardKeyTargets","forEach","key","_show_key_if_visible_and_add_to_visibles","_get_note_number","visiblesNoteNumbersArray","JSON","stringify","noteNumber","is_in_current_array","_visible_on_keyboard","includes","visibles","classList","toggle","push","parse","element","notes","setAttribute","_notes","map","arr","data","get","value","set","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;;8BAMW;AACP,WAAKC,uBAAL,GAA+B,EAA/B;AACA,WAAKC,eAAL;AACD,K,CAED;AACA;AACA;;;;2BACO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,UAAK,KAAKC,QAAL,GAAgB,CAAjB,IAAuB,KAAKC,UAAhC,EAA4C;AAC1C,aAAKD,QAAL;AACD;AACF;;;2BAEM;AACL,UAAI,KAAKA,QAAL,IAAiB,CAArB,EAAwB;AACtB,aAAKA,QAAL;AACD;AACF;;;qCA+BgBE,U,EAAY;AAC3B,aAAOC,QAAQ,CAACD,UAAU,CAACE,YAAX,CAAwB,kBAAxB,CAAD,CAAf;AACD;;;sCAEiB;AAAA;;AAChB,WAAKC,kBAAL,CAAwBC,OAAxB,CAAgC,UAAAC,GAAG;AAAA,eAAI,KAAI,CAACC,wCAAL,CAA8CD,GAA9C,EAAmD,KAAI,CAACE,gBAAL,CAAsBF,GAAtB,CAAnD,CAAJ;AAAA,OAAnC;AACA,WAAKG,wBAAL,GAAgCC,IAAI,CAACC,SAAL,CAAe,KAAKhB,uBAApB,CAAhC;AACD;;;6DAEwCM,U,EAAYW,U,EAAY;AAC/D,UAAIC,mBAAmB,GAAG,KAAKC,oBAAL,CAA0BC,QAA1B,CAAmCH,UAAnC,CAA1B;;AACA,UAAII,QAAQ,GAAG,EAAf;AACAf,MAAAA,UAAU,CAACgB,SAAX,CAAqBC,MAArB,CAA4B,MAA5B,EAAoC,CAACL,mBAArC;AACA,UAAGA,mBAAH,EAAwB,KAAKlB,uBAAL,CAA6BwB,IAA7B,CAAkCP,UAAlC;AACzB;;;wBA3C8B;AAC7B,aAAOF,IAAI,CAACU,KAAL,CAAW,KAAKC,OAAL,CAAalB,YAAb,CAA0B,iCAA1B,CAAX,CAAP;AACD,K;sBAE4BmB,K,EAAM;AACjC,WAAKD,OAAL,CAAaE,YAAb,CAA0B,iCAA1B,EAA6DD,KAA7D;AACD;;;wBAE0B;AACzB,aAAO,KAAKE,MAAL,CAAY,KAAKzB,QAAjB,EAA2B0B,GAA3B,CAA+B,UAAAC,GAAG;AAAA,eAAIxB,QAAQ,CAACwB,GAAG,CAAC,CAAD,CAAJ,CAAZ;AAAA,OAAlC,CAAP;AACD;;;wBAEc;AACb,aAAOxB,QAAQ,CAAC,KAAKyB,IAAL,CAAUC,GAAV,CAAc,UAAd,CAAD,CAAf;AACD,K;sBAUYC,K,EAAO;AAClB,WAAKF,IAAL,CAAUG,GAAV,CAAc,UAAd,EAA0BD,KAA1B;AACA,WAAKjC,eAAL;AACD;;;wBAXY;AACX,aAAOc,IAAI,CAACU,KAAL,CAAW,KAAKO,IAAL,CAAUC,GAAV,CAAc,OAAd,CAAX,CAAP;AACD;;;wBAEgB;AACf,aAAO1B,QAAQ,CAAC,KAAKyB,IAAL,CAAUC,GAAV,CAAc,aAAd,CAAD,CAAf;AACD;;;;EA/C0BlC,U;;SAEpBqC,O,GAAU,CAAC,aAAD,C","sourcesContent":["import { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n\n  static targets = [\"keyBoardKey\"]\n\n  connect(){\n    this._visibeNoteNumbersArray = [];\n    this.refreshKeyboard();\n  }\n\n  ///////////////////////////////////////////\n  ///               PUBLIC                ///\n  ///////////////////////////////////////////\n  next() {\n    console.log('next')\n    if ((this.position + 1) <= this.finalIndex) {\n      this.position++\n    }\n  }\n\n  prev() {\n    if (this.position != 0) {\n      this.position--\n    }\n  }\n\n  get visiblesNoteNumbersArray() {\n    return JSON.parse(this.element.getAttribute(\"data-visible-note-numbers-array\"));\n  }\n\n  set visiblesNoteNumbersArray(notes){\n    this.element.setAttribute(\"data-visible-note-numbers-array\", notes);\n  }\n\n  get _visible_on_keyboard() {\n    return this._notes[this.position].map(arr => parseInt(arr[0]))\n  }\n\n  get position() {\n    return parseInt(this.data.get(\"position\"))\n  }\n\n  get _notes() {\n    return JSON.parse(this.data.get(\"notes\"))\n  }\n\n  get finalIndex() {\n    return parseInt(this.data.get(\"final-index\"))\n  }\n\n  set position(value) {\n    this.data.set(\"position\", value)\n    this.refreshKeyboard()\n  }\n\n  _get_note_number(keyElement) {\n    return parseInt(keyElement.getAttribute('midi-note-number'))\n  }\n\n  refreshKeyboard() {\n    this.keyBoardKeyTargets.forEach(key => this._show_key_if_visible_and_add_to_visibles(key, this._get_note_number(key)));\n    this.visiblesNoteNumbersArray = JSON.stringify(this._visibeNoteNumbersArray);\n  }\n\n  _show_key_if_visible_and_add_to_visibles(keyElement, noteNumber) {\n    let is_in_current_array = this._visible_on_keyboard.includes(noteNumber);\n    let visibles = [];\n    keyElement.classList.toggle(\"hide\", !is_in_current_array);\n    if(is_in_current_array) this._visibeNoteNumbersArray.push(noteNumber);\n  }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}