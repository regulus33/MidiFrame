{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from \"stimulus\";\nimport WebMidi from 'webmidi';\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      this._enable_midi();\n    }\n  }, {\n    key: \"onMessageStart\",\n    value: function onMessageStart() {\n      this._play();\n    }\n  }, {\n    key: \"_on_success\",\n    value: function _on_success() {\n      this._midiInput.addListener('start', \"all\", this.onMessageStart.bind(this));\n    }\n  }, {\n    key: \"_on_error\",\n    value: function _on_error(error) {\n      // console.log(error)\n      alert('Could not connect to device ☹️');\n    }\n  }, {\n    key: \"_enable_midi\",\n    value: function _enable_midi(channel) {\n      var _this = this;\n\n      WebMidi.enable(function (error) {\n        error ? _this._on_error(error) : _this._on_success(channel);\n      });\n    }\n  }, {\n    key: \"_play\",\n    value: function _play() {\n      this.videoPreviewTarget.play();\n    }\n  }, {\n    key: \"_midiInput\",\n    get: function get() {\n      return WebMidi.inputs[0];\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = [\"videoPreview\"];\nexport { _default as default };","map":{"version":3,"sources":["/Users/zack/andrWert43h/app/javascript/controllers/patterns/pattern_preview_controller.js"],"names":["Controller","WebMidi","_enable_midi","_play","_midiInput","addListener","onMessageStart","bind","error","alert","channel","enable","_on_error","_on_success","videoPreviewTarget","play","inputs","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;;;;;;;;;;;;8BAMY;AACR,WAAKC,YAAL;AACD;;;qCAEgB;AACf,WAAKC,KAAL;AACD;;;kCAMY;AACX,WAAKC,UAAL,CAAgBC,WAAhB,CAA4B,OAA5B,EAAqC,KAArC,EAA4C,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA5C;AACD;;;8BAESC,K,EAAO;AACf;AACAC,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;;;iCAEYC,O,EAAS;AAAA;;AACpBT,MAAAA,OAAO,CAACU,MAAR,CAAe,UAAAH,KAAK,EAAI;AAAEA,QAAAA,KAAK,GAAG,KAAI,CAACI,SAAL,CAAeJ,KAAf,CAAH,GAA2B,KAAI,CAACK,WAAL,CAAiBH,OAAjB,CAAhC;AAA4D,OAAtF;AACD;;;4BAEO;AACN,WAAKI,kBAAL,CAAwBC,IAAxB;AACD;;;wBAnBe;AACd,aAAOd,OAAO,CAACe,MAAR,CAAe,CAAf,CAAP;AACD;;;;EAd0BhB,U;;SAEpBiB,O,GAAU,CAAC,cAAD,C","sourcesContent":["import { Controller } from \"stimulus\"\nimport WebMidi from 'webmidi'\n\nexport default class extends Controller {\n\n  static targets = [\"videoPreview\"]\n\n  connect() {\n    this._enable_midi()\n  }\n\n  onMessageStart() {\n    this._play()\n  }\n\n  get _midiInput(){\n    return WebMidi.inputs[0]\n  }\n\n  _on_success(){\n    this._midiInput.addListener('start', \"all\", this.onMessageStart.bind(this))\n  }\n\n  _on_error(error) {\n    // console.log(error)\n    alert('Could not connect to device ☹️')\n  }\n\n  _enable_midi(channel) {\n    WebMidi.enable(error => { error ? this._on_error(error) : this._on_success(channel)  })\n  }\n\n  _play() {\n    this.videoPreviewTarget.play()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}