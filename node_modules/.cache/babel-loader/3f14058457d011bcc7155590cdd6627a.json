{"ast":null,"code":"var _jsxFileName = \"/Users/zackrowden/Desktop/video/frtVertiiiiiiiii/src/SingleChannel.js\";\nimport React from 'react';\nimport './App.css';\nimport RecordButton from './buttons/RecordButton.js';\nimport SingleChannelHelper from './classes/SingleChannelHelper.js';\nimport StopButton from './buttons/StopButton';\nimport StartButton from './buttons/StartButton';\n\nconst SingleChannel = () => {\n  const helper = new SingleChannelHelper(document, window);\n  let offset = 0;\n  let timeOfRecordPress = 0;\n  let timeOfStartPress = 0;\n  const gridStyles = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n\n  const startHandler = event => {\n    event.target.style[\"borderTop\"] = \"100px solid grey\";\n    helper.requestMIDIAccess(); //for offset in video editing later on \n\n    timeOfStartPress = Date.now();\n  };\n\n  const recordHandler = event => {\n    console.log(\"clicked\");\n    console.log(event);\n    event.target.style.backgroundColor = \"#676767\";\n    helper.setupAndBeginRecording(); //for offset in video editing later on \n\n    timeOfRecordPress = Date.now();\n  };\n\n  const stopHandler = event => {\n    console.log(\"stop handler called\");\n    event.target.style.backgroundColor = \"#777\";\n    helper.onStop(timeOfRecordPress - timeOfStartPress);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"div\",\n    style: {\n      width: '100%',\n      height: '700px',\n      backgroundColor: 'cornflowerblue'\n    },\n    onClick: helper.requestMIDIAccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      letterSpacing: \"5px\",\n      fontFamily: \"Arial, Helvetica, sans-serif\",\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, text), React.createElement(\"h1\", {\n    id: \"iterableEmoji\",\n    style: {\n      textAlign: \"center\",\n      fontSize: \"90px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\uD83D\\uDC80\"), React.createElement(\"div\", {\n    styles: gridStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(StartButton, {\n    onClick: startHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: gridStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(StopButton, {\n    onClick: stopHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(RecordButton, {\n    onClick: recordHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nexport default SingleChannel;","map":{"version":3,"sources":["/Users/zackrowden/Desktop/video/frtVertiiiiiiiii/src/SingleChannel.js"],"names":["React","RecordButton","SingleChannelHelper","StopButton","StartButton","SingleChannel","helper","document","window","offset","timeOfRecordPress","timeOfStartPress","gridStyles","display","flexDirection","flexWrap","width","alignItems","justifyContent","startHandler","event","target","style","requestMIDIAccess","Date","now","recordHandler","console","log","backgroundColor","setupAndBeginRecording","stopHandler","onStop","height","textAlign","letterSpacing","fontFamily","color","text","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport RecordButton from './buttons/RecordButton.js'\nimport  SingleChannelHelper from './classes/SingleChannelHelper.js'\nimport StopButton from './buttons/StopButton';\nimport StartButton from './buttons/StartButton';\n\nconst SingleChannel = () => {\n\n  const helper = new SingleChannelHelper(document, window)\n\n  let offset = 0 \n  let timeOfRecordPress = 0 \n  let timeOfStartPress = 0 \n\n  const gridStyles = { \n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }\n\n  const startHandler = (event) => {\n    event.target.style[\"borderTop\"] = \"100px solid grey\"\n    helper.requestMIDIAccess()\n    //for offset in video editing later on \n    timeOfStartPress = Date.now()\n  }\n\n  const recordHandler = (event) => {\n    console.log(\"clicked\")\n    console.log(event)\n    event.target.style.backgroundColor = \"#676767\"\n    helper.setupAndBeginRecording()\n    //for offset in video editing later on \n    timeOfRecordPress = Date.now()\n  }\n\n  const stopHandler = (event) => {\n    console.log(\"stop handler called\")\n    event.target.style.backgroundColor = \"#777\"\n    helper.onStop(timeOfRecordPress - timeOfStartPress)\n  }\n\n  return (\n    <div id=\"div\" style={{width:'100%',height:'700px',backgroundColor:'cornflowerblue'}} onClick={helper.requestMIDIAccess}>\n      <h1 style={{textAlign:\"center\", letterSpacing: \"5px\", fontFamily: \"Arial, Helvetica, sans-serif\", color: \"white\"}}>{text}</h1>\n      <h1 id=\"iterableEmoji\" style={{textAlign:\"center\", fontSize: \"90px\"}}>ðŸ’€</h1>\n      <div styles={gridStyles}>\n        <StartButton onClick={startHandler}/>\n      </div>\n      <div style={gridStyles}> \n        <StopButton onClick={stopHandler} />\n        <RecordButton onClick={recordHandler} />\n      </div>\n    </div>\n  );\n}\n\nexport default SingleChannel"]},"metadata":{},"sourceType":"module"}