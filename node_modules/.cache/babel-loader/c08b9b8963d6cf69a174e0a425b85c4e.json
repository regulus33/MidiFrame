{"ast":null,"code":"var WORKER_PATH = './recorderWorker.js';\n\nvar Recorder = function (source, cfg) {\n  var config = cfg || {};\n  var bufferLen = config.bufferLen || 4096;\n  this.context = source.context;\n  this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, bufferLen, 2, 2);\n  var worker = new Worker(WORKER_PATH);\n\n  worker.onmessage = function (e) {\n    var blob = e.data;\n    currCallback(blob);\n  };\n\n  worker.postMessage({\n    command: 'init',\n    config: {\n      sampleRate: this.context.sampleRate\n    }\n  });\n  var recording = false,\n      currCallback;\n\n  this.node.onaudioprocess = function (e) {\n    if (!recording) return;\n    worker.postMessage({\n      command: 'record',\n      buffer: [e.inputBuffer.getChannelData(0), e.inputBuffer.getChannelData(1)]\n    });\n  };\n\n  this.configure = function (cfg) {\n    for (var prop in cfg) {\n      if (cfg.hasOwnProperty(prop)) {\n        config[prop] = cfg[prop];\n      }\n    }\n  };\n\n  this.record = function () {\n    recording = true;\n  };\n\n  this.stop = function () {\n    recording = false;\n  };\n\n  this.clear = function () {\n    worker.postMessage({\n      command: 'clear'\n    });\n  };\n\n  this.getBuffer = function (cb) {\n    currCallback = cb || config.callback;\n    worker.postMessage({\n      command: 'getBuffer'\n    });\n  };\n\n  this.exportWAV = function (cb, type) {\n    currCallback = cb || config.callback;\n    type = type || config.type || 'audio/wav';\n    if (!currCallback) throw new Error('Callback not set');\n    worker.postMessage({\n      command: 'exportWAV',\n      type: type\n    });\n  };\n\n  source.connect(this.node);\n  this.node.connect(this.context.destination); //this should not be necessary\n};\n\nRecorder.forceDownload = function (blob, filename) {\n  var url = (window.URL || window.webkitURL).createObjectURL(blob);\n  var link = window.document.createElement('a');\n  link.href = url;\n  link.download = filename || 'output.wav';\n  var click = document.createEvent(\"Event\");\n  click.initEvent(\"click\", true, true);\n  link.dispatchEvent(click);\n};\n\nmodule.exports = Recorder;","map":null,"metadata":{},"sourceType":"script"}