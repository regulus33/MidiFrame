{"ast":null,"code":"(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.Recorder = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) s(r[o]);\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      \"use strict\";\n\n      module.exports = require(\"./recorder\").Recorder;\n    }, {\n      \"./recorder\": 2\n    }],\n    2: [function (require, module, exports) {\n      'use strict';\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Recorder = undefined;\n\n      var _inlineWorker = require('inline-worker');\n\n      var _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var Recorder = exports.Recorder = function () {\n        function Recorder(source, cfg) {\n          var _this = this;\n\n          _classCallCheck(this, Recorder);\n\n          this.config = {\n            bufferLen: 4096,\n            numChannels: 2,\n            mimeType: 'audio/wav'\n          };\n          this.recording = false;\n          this.callbacks = {\n            getBuffer: [],\n            exportWAV: []\n          };\n          Object.assign(this.config, cfg);\n          this.context = source.context;\n          this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n          this.node.onaudioprocess = function (e) {\n            if (!_this.recording) return;\n            var buffer = [];\n\n            for (var channel = 0; channel < _this.config.numChannels; channel++) {\n              buffer.push(e.inputBuffer.getChannelData(channel));\n            }\n\n            _this.worker.postMessage({\n              command: 'record',\n              buffer: buffer\n            });\n          };\n\n          source.connect(this.node);\n          this.node.connect(this.context.destination); //this should not be necessary\n\n          var self = {};\n          this.worker = new _inlineWorker2.default(function () {\n            var recLength = 0,\n                recBuffers = [],\n                sampleRate = undefined,\n                numChannels = undefined;\n\n            self.onmessage = function (e) {\n              switch (e.data.command) {\n                case 'init':\n                  init(e.data.config);\n                  break;\n\n                case 'record':\n                  record(e.data.buffer);\n                  break;\n\n                case 'exportWAV':\n                  exportWAV(e.data.type);\n                  break;\n\n                case 'getBuffer':\n                  getBuffer();\n                  break;\n\n                case 'clear':\n                  clear();\n                  break;\n              }\n            };\n\n            function init(config) {\n              sampleRate = config.sampleRate;\n              numChannels = config.numChannels;\n              initBuffers();\n            }\n\n            function record(inputBuffer) {\n              for (var channel = 0; channel < numChannels; channel++) {\n                recBuffers[channel].push(inputBuffer[channel]);\n              }\n\n              recLength += inputBuffer[0].length;\n            }\n\n            function exportWAV(type) {\n              var buffers = [];\n\n              for (var channel = 0; channel < numChannels; channel++) {\n                buffers.push(mergeBuffers(recBuffers[channel], recLength));\n              }\n\n              var interleaved = undefined;\n\n              if (numChannels === 2) {\n                interleaved = interleave(buffers[0], buffers[1]);\n              } else {\n                interleaved = buffers[0];\n              }\n\n              var dataview = encodeWAV(interleaved);\n              var audioBlob = new Blob([dataview], {\n                type: type\n              });\n              self.postMessage({\n                command: 'exportWAV',\n                data: audioBlob\n              });\n            }\n\n            function getBuffer() {\n              var buffers = [];\n\n              for (var channel = 0; channel < numChannels; channel++) {\n                buffers.push(mergeBuffers(recBuffers[channel], recLength));\n              }\n\n              self.postMessage({\n                command: 'getBuffer',\n                data: buffers\n              });\n            }\n\n            function clear() {\n              recLength = 0;\n              recBuffers = [];\n              initBuffers();\n            }\n\n            function initBuffers() {\n              for (var channel = 0; channel < numChannels; channel++) {\n                recBuffers[channel] = [];\n              }\n            }\n\n            function mergeBuffers(recBuffers, recLength) {\n              var result = new Float32Array(recLength);\n              var offset = 0;\n\n              for (var i = 0; i < recBuffers.length; i++) {\n                result.set(recBuffers[i], offset);\n                offset += recBuffers[i].length;\n              }\n\n              return result;\n            }\n\n            function interleave(inputL, inputR) {\n              var length = inputL.length + inputR.length;\n              var result = new Float32Array(length);\n              var index = 0,\n                  inputIndex = 0;\n\n              while (index < length) {\n                result[index++] = inputL[inputIndex];\n                result[index++] = inputR[inputIndex];\n                inputIndex++;\n              }\n\n              return result;\n            }\n\n            function floatTo16BitPCM(output, offset, input) {\n              for (var i = 0; i < input.length; i++, offset += 2) {\n                var s = Math.max(-1, Math.min(1, input[i]));\n                output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n              }\n            }\n\n            function writeString(view, offset, string) {\n              for (var i = 0; i < string.length; i++) {\n                view.setUint8(offset + i, string.charCodeAt(i));\n              }\n            }\n\n            function encodeWAV(samples) {\n              var buffer = new ArrayBuffer(44 + samples.length * 2);\n              var view = new DataView(buffer);\n              /* RIFF identifier */\n\n              writeString(view, 0, 'RIFF');\n              /* RIFF chunk length */\n\n              view.setUint32(4, 36 + samples.length * 2, true);\n              /* RIFF type */\n\n              writeString(view, 8, 'WAVE');\n              /* format chunk identifier */\n\n              writeString(view, 12, 'fmt ');\n              /* format chunk length */\n\n              view.setUint32(16, 16, true);\n              /* sample format (raw) */\n\n              view.setUint16(20, 1, true);\n              /* channel count */\n\n              view.setUint16(22, numChannels, true);\n              /* sample rate */\n\n              view.setUint32(24, sampleRate, true);\n              /* byte rate (sample rate * block align) */\n\n              view.setUint32(28, sampleRate * 4, true);\n              /* block align (channel count * bytes per sample) */\n\n              view.setUint16(32, numChannels * 2, true);\n              /* bits per sample */\n\n              view.setUint16(34, 16, true);\n              /* data chunk identifier */\n\n              writeString(view, 36, 'data');\n              /* data chunk length */\n\n              view.setUint32(40, samples.length * 2, true);\n              floatTo16BitPCM(view, 44, samples);\n              return view;\n            }\n          }, self);\n          this.worker.postMessage({\n            command: 'init',\n            config: {\n              sampleRate: this.context.sampleRate,\n              numChannels: this.config.numChannels\n            }\n          });\n\n          this.worker.onmessage = function (e) {\n            var cb = _this.callbacks[e.data.command].pop();\n\n            if (typeof cb == 'function') {\n              cb(e.data.data);\n            }\n          };\n        }\n\n        _createClass(Recorder, [{\n          key: 'record',\n          value: function record() {\n            this.recording = true;\n          }\n        }, {\n          key: 'stop',\n          value: function stop() {\n            this.recording = false;\n          }\n        }, {\n          key: 'clear',\n          value: function clear() {\n            this.worker.postMessage({\n              command: 'clear'\n            });\n          }\n        }, {\n          key: 'getBuffer',\n          value: function getBuffer(cb) {\n            cb = cb || this.config.callback;\n            if (!cb) throw new Error('Callback not set');\n            this.callbacks.getBuffer.push(cb);\n            this.worker.postMessage({\n              command: 'getBuffer'\n            });\n          }\n        }, {\n          key: 'exportWAV',\n          value: function exportWAV(cb, mimeType) {\n            mimeType = mimeType || this.config.mimeType;\n            cb = cb || this.config.callback;\n            if (!cb) throw new Error('Callback not set');\n            this.callbacks.exportWAV.push(cb);\n            this.worker.postMessage({\n              command: 'exportWAV',\n              type: mimeType\n            });\n          }\n        }], [{\n          key: 'forceDownload',\n          value: function forceDownload(blob, filename) {\n            var url = (window.URL || window.webkitURL).createObjectURL(blob);\n            var link = window.document.createElement('a');\n            link.href = url;\n            link.download = filename || 'output.wav';\n            var click = document.createEvent(\"Event\");\n            click.initEvent(\"click\", true, true);\n            link.dispatchEvent(click);\n          }\n        }]);\n\n        return Recorder;\n      }();\n\n      exports.default = Recorder;\n    }, {\n      \"inline-worker\": 3\n    }],\n    3: [function (require, module, exports) {\n      \"use strict\";\n\n      module.exports = require(\"./inline-worker\");\n    }, {\n      \"./inline-worker\": 4\n    }],\n    4: [function (require, module, exports) {\n      (function (global) {\n        \"use strict\";\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var key in props) {\n              var prop = props[key];\n              prop.configurable = true;\n              if (prop.value) prop.writable = true;\n            }\n\n            Object.defineProperties(target, props);\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        var _classCallCheck = function (instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        };\n\n        var WORKER_ENABLED = !!(global === global.window && global.URL && global.Blob && global.Worker);\n\n        var InlineWorker = function () {\n          function InlineWorker(func, self) {\n            var _this = this;\n\n            _classCallCheck(this, InlineWorker);\n\n            if (WORKER_ENABLED) {\n              var functionBody = func.toString().trim().match(/^function\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}$/)[1];\n              var url = global.URL.createObjectURL(new global.Blob([functionBody], {\n                type: \"text/javascript\"\n              }));\n              return new global.Worker(url);\n            }\n\n            this.self = self;\n\n            this.self.postMessage = function (data) {\n              setTimeout(function () {\n                _this.onmessage({\n                  data: data\n                });\n              }, 0);\n            };\n\n            setTimeout(function () {\n              func.call(self);\n            }, 0);\n          }\n\n          _createClass(InlineWorker, {\n            postMessage: {\n              value: function postMessage(data) {\n                var _this = this;\n\n                setTimeout(function () {\n                  _this.self.onmessage({\n                    data: data\n                  });\n                }, 0);\n              }\n            }\n          });\n\n          return InlineWorker;\n        }();\n\n        module.exports = InlineWorker;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}]\n  }, {}, [1])(1);\n});","map":{"version":3,"sources":["/Users/zackrowden/Desktop/video/fertvertfront/src/vendor/recorder.js"],"names":["f","exports","module","define","amd","g","window","global","self","Recorder","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","value","undefined","_inlineWorker","_inlineWorker2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","source","cfg","_this","config","bufferLen","numChannels","mimeType","recording","callbacks","getBuffer","exportWAV","assign","context","node","createScriptProcessor","createJavaScriptNode","onaudioprocess","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","recLength","recBuffers","sampleRate","onmessage","data","init","record","type","clear","initBuffers","buffers","mergeBuffers","interleaved","interleave","dataview","encodeWAV","audioBlob","Blob","result","Float32Array","offset","set","inputL","inputR","index","inputIndex","floatTo16BitPCM","output","input","Math","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","samples","ArrayBuffer","DataView","setUint32","setUint16","cb","pop","stop","callback","forceDownload","blob","filename","url","URL","webkitURL","createObjectURL","link","document","createElement","href","download","click","createEvent","initEvent","dispatchEvent","prop","WORKER_ENABLED","Worker","InlineWorker","func","functionBody","toString","trim","match","setTimeout"],"mappings":"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","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Recorder = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = require(\"./recorder\").Recorder;\n\n},{\"./recorder\":2}],2:[function(require,module,exports){\n'use strict';\n\nvar _createClass = (function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n})();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Recorder = undefined;\n\nvar _inlineWorker = require('inline-worker');\n\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Recorder = exports.Recorder = (function () {\n    function Recorder(source, cfg) {\n        var _this = this;\n\n        _classCallCheck(this, Recorder);\n\n        this.config = {\n            bufferLen: 4096,\n            numChannels: 2,\n            mimeType: 'audio/wav'\n        };\n        this.recording = false;\n        this.callbacks = {\n            getBuffer: [],\n            exportWAV: []\n        };\n\n        Object.assign(this.config, cfg);\n        this.context = source.context;\n        this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n        this.node.onaudioprocess = function (e) {\n            if (!_this.recording) return;\n\n            var buffer = [];\n            for (var channel = 0; channel < _this.config.numChannels; channel++) {\n                buffer.push(e.inputBuffer.getChannelData(channel));\n            }\n            _this.worker.postMessage({\n                command: 'record',\n                buffer: buffer\n            });\n        };\n\n        source.connect(this.node);\n        this.node.connect(this.context.destination); //this should not be necessary\n\n        var self = {};\n        this.worker = new _inlineWorker2.default(function () {\n            var recLength = 0,\n                recBuffers = [],\n                sampleRate = undefined,\n                numChannels = undefined;\n\n            self.onmessage = function (e) {\n                switch (e.data.command) {\n                    case 'init':\n                        init(e.data.config);\n                        break;\n                    case 'record':\n                        record(e.data.buffer);\n                        break;\n                    case 'exportWAV':\n                        exportWAV(e.data.type);\n                        break;\n                    case 'getBuffer':\n                        getBuffer();\n                        break;\n                    case 'clear':\n                        clear();\n                        break;\n                }\n            };\n\n            function init(config) {\n                sampleRate = config.sampleRate;\n                numChannels = config.numChannels;\n                initBuffers();\n            }\n\n            function record(inputBuffer) {\n                for (var channel = 0; channel < numChannels; channel++) {\n                    recBuffers[channel].push(inputBuffer[channel]);\n                }\n                recLength += inputBuffer[0].length;\n            }\n\n            function exportWAV(type) {\n                var buffers = [];\n                for (var channel = 0; channel < numChannels; channel++) {\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\n                }\n                var interleaved = undefined;\n                if (numChannels === 2) {\n                    interleaved = interleave(buffers[0], buffers[1]);\n                } else {\n                    interleaved = buffers[0];\n                }\n                var dataview = encodeWAV(interleaved);\n                var audioBlob = new Blob([dataview], { type: type });\n\n                self.postMessage({ command: 'exportWAV', data: audioBlob });\n            }\n\n            function getBuffer() {\n                var buffers = [];\n                for (var channel = 0; channel < numChannels; channel++) {\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\n                }\n                self.postMessage({ command: 'getBuffer', data: buffers });\n            }\n\n            function clear() {\n                recLength = 0;\n                recBuffers = [];\n                initBuffers();\n            }\n\n            function initBuffers() {\n                for (var channel = 0; channel < numChannels; channel++) {\n                    recBuffers[channel] = [];\n                }\n            }\n\n            function mergeBuffers(recBuffers, recLength) {\n                var result = new Float32Array(recLength);\n                var offset = 0;\n                for (var i = 0; i < recBuffers.length; i++) {\n                    result.set(recBuffers[i], offset);\n                    offset += recBuffers[i].length;\n                }\n                return result;\n            }\n\n            function interleave(inputL, inputR) {\n                var length = inputL.length + inputR.length;\n                var result = new Float32Array(length);\n\n                var index = 0,\n                    inputIndex = 0;\n\n                while (index < length) {\n                    result[index++] = inputL[inputIndex];\n                    result[index++] = inputR[inputIndex];\n                    inputIndex++;\n                }\n                return result;\n            }\n\n            function floatTo16BitPCM(output, offset, input) {\n                for (var i = 0; i < input.length; i++, offset += 2) {\n                    var s = Math.max(-1, Math.min(1, input[i]));\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n                }\n            }\n\n            function writeString(view, offset, string) {\n                for (var i = 0; i < string.length; i++) {\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            }\n\n            function encodeWAV(samples) {\n                var buffer = new ArrayBuffer(44 + samples.length * 2);\n                var view = new DataView(buffer);\n\n                /* RIFF identifier */\n                writeString(view, 0, 'RIFF');\n                /* RIFF chunk length */\n                view.setUint32(4, 36 + samples.length * 2, true);\n                /* RIFF type */\n                writeString(view, 8, 'WAVE');\n                /* format chunk identifier */\n                writeString(view, 12, 'fmt ');\n                /* format chunk length */\n                view.setUint32(16, 16, true);\n                /* sample format (raw) */\n                view.setUint16(20, 1, true);\n                /* channel count */\n                view.setUint16(22, numChannels, true);\n                /* sample rate */\n                view.setUint32(24, sampleRate, true);\n                /* byte rate (sample rate * block align) */\n                view.setUint32(28, sampleRate * 4, true);\n                /* block align (channel count * bytes per sample) */\n                view.setUint16(32, numChannels * 2, true);\n                /* bits per sample */\n                view.setUint16(34, 16, true);\n                /* data chunk identifier */\n                writeString(view, 36, 'data');\n                /* data chunk length */\n                view.setUint32(40, samples.length * 2, true);\n\n                floatTo16BitPCM(view, 44, samples);\n\n                return view;\n            }\n        }, self);\n\n        this.worker.postMessage({\n            command: 'init',\n            config: {\n                sampleRate: this.context.sampleRate,\n                numChannels: this.config.numChannels\n            }\n        });\n\n        this.worker.onmessage = function (e) {\n            var cb = _this.callbacks[e.data.command].pop();\n            if (typeof cb == 'function') {\n                cb(e.data.data);\n            }\n        };\n    }\n\n    _createClass(Recorder, [{\n        key: 'record',\n        value: function record() {\n            this.recording = true;\n        }\n    }, {\n        key: 'stop',\n        value: function stop() {\n            this.recording = false;\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.worker.postMessage({ command: 'clear' });\n        }\n    }, {\n        key: 'getBuffer',\n        value: function getBuffer(cb) {\n            cb = cb || this.config.callback;\n            if (!cb) throw new Error('Callback not set');\n\n            this.callbacks.getBuffer.push(cb);\n\n            this.worker.postMessage({ command: 'getBuffer' });\n        }\n    }, {\n        key: 'exportWAV',\n        value: function exportWAV(cb, mimeType) {\n            mimeType = mimeType || this.config.mimeType;\n            cb = cb || this.config.callback;\n            if (!cb) throw new Error('Callback not set');\n\n            this.callbacks.exportWAV.push(cb);\n\n            this.worker.postMessage({\n                command: 'exportWAV',\n                type: mimeType\n            });\n        }\n    }], [{\n        key: 'forceDownload',\n        value: function forceDownload(blob, filename) {\n            var url = (window.URL || window.webkitURL).createObjectURL(blob);\n            var link = window.document.createElement('a');\n            link.href = url;\n            link.download = filename || 'output.wav';\n            var click = document.createEvent(\"Event\");\n            click.initEvent(\"click\", true, true);\n            link.dispatchEvent(click);\n        }\n    }]);\n\n    return Recorder;\n})();\n\nexports.default = Recorder;\n\n},{\"inline-worker\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = require(\"./inline-worker\");\n},{\"./inline-worker\":4}],4:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar WORKER_ENABLED = !!(global === global.window && global.URL && global.Blob && global.Worker);\n\nvar InlineWorker = (function () {\n  function InlineWorker(func, self) {\n    var _this = this;\n\n    _classCallCheck(this, InlineWorker);\n\n    if (WORKER_ENABLED) {\n      var functionBody = func.toString().trim().match(/^function\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}$/)[1];\n      var url = global.URL.createObjectURL(new global.Blob([functionBody], { type: \"text/javascript\" }));\n\n      return new global.Worker(url);\n    }\n\n    this.self = self;\n    this.self.postMessage = function (data) {\n      setTimeout(function () {\n        _this.onmessage({ data: data });\n      }, 0);\n    };\n\n    setTimeout(function () {\n      func.call(self);\n    }, 0);\n  }\n\n  _createClass(InlineWorker, {\n    postMessage: {\n      value: function postMessage(data) {\n        var _this = this;\n\n        setTimeout(function () {\n          _this.self.onmessage({ data: data });\n        }, 0);\n      }\n    }\n  });\n\n  return InlineWorker;\n})();\n\nmodule.exports = InlineWorker;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1])(1)\n});"]},"metadata":{},"sourceType":"module"}